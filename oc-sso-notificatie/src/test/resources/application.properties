#
# Copyright 2021, Stichting Kennisnet
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Security headers - set to false to drop security headers and enhance interoperability between domains
security.headers.enabled=false

# API settings
# Url of the API which returns the SSO notification information by id.
api.endpoint.url=http://localhost:3000/api/sso-notification
# The name of the API key header
api.key.header.key=api-key
# The api-key header value - used in security purposes, is added to idp rest request
api.key.header.value=TESTTOKEN
# The URL-suffix to fetch all SSO Notification data from the Data Service endpoint
api.endpoint.url.all-suffix=/all
# The URL-suffix to fetch the cache-hash to see if the cache needs to be evicted
api.endpoint.url.cacheHash=/cache-hash

# SSO Notification cookie settings
# The domain to set for the notification cookie
notification.cookie.domain=127.0.0.1
# The path to set for the notification cookie
notification.cookie.path=/
# The secure flag to set for the notification cookie
notification.cookie.secured=true

# Crypto related settings
# The encryption method used
crypto.encrypt.algorithm=AES/CBC/PKCS5Padding
# The secure password used to generate the encryption key - used for generating notification cookie value
crypto.secure.key=axNEgHbZrcQQQ39MGNBMczcuDRN9WLv3
crypto.secure.key.type=PBKDF2WithHmacSHA256
crypto.secure.key.algorithm=AES
crypto.secure.salt=cQ_Jym5aH$Fqua#D

# Caching settings
# The expiration time in seconds to invalidate the cached entries for the retrieved idp information.
idp.cache.expiration.time.seconds=300
# Polling schedule if a central data-service is used, disabled by default
dataservices.fetchCacheHash.cronSchedule=-

# log level for whole application
logging.level.root=INFO
# log level for classes in nl.* package
logging.level.nl=DEBUG

data.location=classpath:idp.data.json